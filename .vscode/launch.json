{
  "version": "0.2.0",
  "configurations": [
    {
      "type": "node",
      "request": "attach",
      "name": "Docker: Attach to Node",
      "remoteRoot": "/usr/src/app"
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "test-api-django:utils.set_environ (python3.9)",
      "invokeTarget": {
        "target": "code",
        "projectRoot": "${workspaceFolder}/",
        "lambdaHandler": "utils.set_environ"
      },
      "lambda": {
        "runtime": "python3.9",
        "payload": {},
        "environmentVariables": {}
      }
    },
    {
      "name": "Attach to Kubernetes Pod (Python)",
      "type": "cloudcode.kubernetes",
      "request": "attach",
      "language": "Python",
      "debugPort": 3000,
      "podSelector": {
        "app": "deployment-name"
      },
      "localRoot": "${workspaceFolder}",
      "remoteRoot": "Path to the Remote Directory Containing the Program"
    },
    {
      "name": "Cloud Run: Run/Debug Locally",
      "type": "cloudcode.cloudrun",
      "request": "launch",
      "build": {
        "docker": {
          "path": "Dockerfile"
        }
      },
      "image": "${workspaceFolderBasename}",
      "service": {
        "name": "${workspaceFolderBasename}",
        "containerPort": 8080,
        "resources": {
          "limits": {
            "memory": "256Mi"
          }
        }
      },
      "target": {
        "minikube": {}
      },
      "watch": true
    },
    {
      "name": "Kubernetes: Run/Debug",
      "type": "cloudcode.kubernetes",
      "request": "launch",
      "skaffoldConfig": "${workspaceFolder}/skaffold.yaml",
      "watch": true,
      "cleanUp": true,
      "portForward": true
    },
    {
      "name": "Cloud Run: Run/Debug Locally",
      "type": "cloudcode.cloudrun",
      "request": "launch",
      "build": {
        "docker": {
          "path": "Dockerfile"
        }
      },
      "image": "${workspaceFolderBasename}",
      "service": {
        "name": "${workspaceFolderBasename}",
        "containerPort": 8080,
        "resources": {
          "limits": {
            "cpu": 1,
            "memory": "256Mi"
          }
        }
      },
      "target": {
        "minikube": {}
      },
      "watch": true
    },
    {
      "name": "Kubernetes: Run/Debug",
      "type": "cloudcode.kubernetes",
      "request": "launch",
      "skaffoldConfig": "${workspaceFolder}/skaffold.yaml",
      "watch": true,
      "cleanUp": true,
      "portForward": true
    },
    {
      "name": "Python: Remote Attach",
      "type": "python",
      "request": "attach",
      "connect": {
        "host": "localhost",
        "port": 443
      },
      "pathMappings": [
        {
          "localRoot": "${workspaceFolder}",
          "remoteRoot": "."
        }
      ]
    },
    {
      "type": "sldb",
      "request": "launch",
      "name": "(sdlb) Launch",
      "program": "enter program name here, for example /my_program"
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "lambda-python3.9-1:HelloWorldFunction",
      "invokeTarget": {
        "target": "template",
        "templatePath": "${workspaceFolder}/lambda-python3.9-1/template.yaml",
        "logicalId": "HelloWorldFunction"
      },
      "lambda": {
        "payload": {},
        "environmentVariables": {},
        "runtime": "python3.9"
      }
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "API lambda-python3.9-1:HelloWorldFunction",
      "invokeTarget": {
        "target": "api",
        "templatePath": "${workspaceFolder}/lambda-python3.9-1/template.yaml",
        "logicalId": "HelloWorldFunction"
      },
      "api": {
        "path": "/hello",
        "httpMethod": "get",
        "payload": {
          "json": {}
        }
      },
      "lambda": {
        "runtime": "python3.9"
      }
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "lambda-nodejs14.x:StockTradingStateMachine",
      "invokeTarget": {
        "target": "template",
        "templatePath": "${workspaceFolder}/lambda-nodejs14.x/template.yaml",
        "logicalId": "StockTradingStateMachine"
      },
      "lambda": {
        "payload": {},
        "environmentVariables": {},
        "runtime": "nodejs14.x"
      }
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "lambda-nodejs14.x:StockCheckerFunction (nodejs14.x)",
      "invokeTarget": {
        "target": "template",
        "templatePath": "${workspaceFolder}/lambda-nodejs14.x/template.yaml",
        "logicalId": "StockCheckerFunction"
      },
      "lambda": {
        "payload": {},
        "environmentVariables": {},
        "runtime": "nodejs14.x"
      }
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "lambda-nodejs14.x:StockSellerFunction (nodejs14.x)",
      "invokeTarget": {
        "target": "template",
        "templatePath": "${workspaceFolder}/lambda-nodejs14.x/template.yaml",
        "logicalId": "StockSellerFunction"
      },
      "lambda": {
        "payload": {},
        "environmentVariables": {},
        "runtime": "nodejs14.x"
      }
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "lambda-nodejs14.x:StockBuyerFunction (nodejs14.x)",
      "invokeTarget": {
        "target": "template",
        "templatePath": "${workspaceFolder}/lambda-nodejs14.x/template.yaml",
        "logicalId": "StockBuyerFunction"
      },
      "lambda": {
        "payload": {},
        "environmentVariables": {},
        "runtime": "nodejs14.x"
      }
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "lambda-nodejs14.x:TransactionTable",
      "invokeTarget": {
        "target": "template",
        "templatePath": "${workspaceFolder}/lambda-nodejs14.x/template.yaml",
        "logicalId": "TransactionTable"
      },
      "lambda": {
        "payload": {},
        "environmentVariables": {},
        "runtime": "nodejs14.x"
      }
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "lambda-python3.9:HelloWorldFunction (python3.9)",
      "invokeTarget": {
        "target": "template",
        "templatePath": "${workspaceFolder}/lambda-python3.9/template.yaml",
        "logicalId": "HelloWorldFunction"
      },
      "lambda": {
        "payload": {},
        "environmentVariables": {},
        "runtime": "python3.9"
      }
    },
    {
      "type": "aws-sam",
      "request": "direct-invoke",
      "name": "API lambda-python3.9:HelloWorldFunction (python3.9)",
      "invokeTarget": {
        "target": "api",
        "templatePath": "${workspaceFolder}/lambda-python3.9/template.yaml",
        "logicalId": "HelloWorldFunction"
      },
      "api": {
        "path": "/hello",
        "httpMethod": "get",
        "payload": {
          "json": {}
        }
      },
      "lambda": {
        "runtime": "python3.9"
      }
    },
    {
      "name": "Python: Django",
      "type": "python",
      "request": "launch",
      "program": "${workspaceFolder}/manage.py",
      "console": "integratedTerminal",
      "args": [
        "runserver",
        "--noreload",
        "--nothreading"
      ],
      "django": true
    },
    {
      "command": "npm start",
      "name": "Run npm start",
      "request": "launch",
      "type": "node-terminal"
    },
    {
      "name": "Python: Current File",
      "type": "python",
      "request": "launch",
      "program": "${file}",
      "console": "integratedTerminal"
    },
    {
      "name": "C/C++ Runner: Debug Session",
      "type": "cppdbg",
      "request": "launch",
      "args": [],
      "stopAtEntry": false,
      "cwd": "c:\\Users\\tulak\\Documents\\GitHub\\private",
      "environment": [],
      "program": "c:\\Users\\tulak\\Documents\\GitHub\\private\\build\\Debug\\outDebug",
      "internalConsoleOptions": "openOnSessionStart",
      "MIMode": "gdb",
      "miDebuggerPath": "gdb",
      "externalConsole": true,
      "setupCommands": [
        {
          "description": "Enable pretty-printing for gdb",
          "text": "-enable-pretty-printing",
          "ignoreFailures": true
        }
      ]
    },
    {
      "name": "Python: Current File (Integrated Terminal)",
      "type": "python",
      "request": "launch",
      "program": "${file}",
      "console": "integratedTerminal"
    },
    {
      "name": "Python: Remote Attach",
      "type": "python",
      "request": "attach",
      "port": 5678,
      "host": "localhost",
      "pathMappings": [
        {
          "localRoot": "${workspaceFolder}",
          "remoteRoot": "."
        }
      ]
    },
    {
      "name": "Python: Module",
      "type": "python",
      "request": "launch",
      "module": "enter-your-module-name-here",
      "console": "integratedTerminal"
    },
    {
      "name": "Python: Flask",
      "type": "python",
      "request": "launch",
      "module": "flask",
      "env": {
        "FLASK_APP": "app.py"
      },
      "args": [
        "run",
        "--no-debugger",
        "--no-reload"
      ],
      "jinja": true
    },
    {
      "name": "Python: Current File (External Terminal)",
      "type": "python",
      "request": "launch",
      "program": "${file}",
      "console": "externalTerminal"
    },
   
    {
      "name": "Docker: Python - Django",
      "type": "docker",
      "request": "launch",
      "preLaunchTask": "docker-run: debug",
      "python": {
        "pathMappings": [
          {
            "localRoot": "${workspaceFolder}",
            "remoteRoot": "/app"
          }
        ],
        "projectType": "django"
      }
    }
  ]
}
